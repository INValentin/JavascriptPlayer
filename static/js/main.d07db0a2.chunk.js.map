{"version":3,"sources":["components/Header.js","components/Footer.js","components/Track.js","components/PlayList.js","hooks/usePlayer.js","components/Player.js","components/Music.js","components/Main.js","App.js","index.js"],"names":["Header","className","href","Footer","Track","isPlaying","actions","onPlay","onDelete","track","onClick","draggable","name","PlayList","shouldPlayNext","setCurrentSrc","useState","tracks","setTracks","playingTrack","setPlayingTrack","nextPlayed","setNextPlayed","addTrackRef","useRef","filter","t","handlePlay","useCallback","dir","length","playingIndex","findIndex","newPlayingIndex","Number","handleAddTracks","event","isDrop","preventDefault","files","dataTransfer","target","tempVid","document","createElement","uploadedLength","alreadyExists","file","some","tk","filtredFiles","canPlayType","type","alert","useEffect","window","URL","createObjectURL","console","log","ondragover","e","ondrop","current","click","multiple","accept","style","display","ref","onChange","map","key","usePlayer","video","setVideo","playing","setPlaying","muted","setMuted","volume","setVolume","currentTime","setCurrentTime","volumeLine","setVolumeLine","currentTimeLine","setCurrentTimeLine","didEnd","setDidEnd","canPlay","setCanPlay","addListeners","addEventListener","width","offsetWidth","duration","chunkTime","seconds","hours","mins","secs","prepend0","val","String","Math","floor","togglePlay","paused","play","pause","toggleMuted","changeVolume","changeCurrentTime","newTime","calculateFromEvent","isVolume","progressWrapper","firstElementChild","parentElement","progressLine","percentage","offsetX","ProgressLineWrapper","setLine","eventHandler","level","wrapper","setWrapper","Player","setMediaEnded","mediaSrc","loop","shouldHideControls","setShouldHideControls","canHideControls","setCanHideControls","shouldGoFull","setShouldGoFull","timeoutRef","playerRef","handleMouseMove","currentTimeoutRef","clearTimeout","setTimeout","isFull","fullscreenElement","playerEl","requestFullscreen","exitFullscreen","onMouseOut","onMouseMove","autoPlay","src","poster","onMouseOver","prev","Music","currentSrc","mediaEnded","Main","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"6KAiBeA,G,MAfA,WACX,OACI,6BACI,yBAAKC,UAAU,QACX,qCACA,uBAAGA,UAAU,kBAAb,eAEJ,4BACI,4BAAI,uBAAGA,UAAU,OAAOC,KAAK,MAAK,uBAAGD,UAAU,kBAAb,mBAClC,4BAAI,uBAAGA,UAAU,OAAOC,KAAK,MAAK,uBAAGD,UAAU,kBAAb,uBCDnCE,EARA,WACX,OACI,iD,cCeOC,EAjBD,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,UAAsD,IAA3CC,QAAWC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,SAAYC,EAAY,EAAZA,MAEvD,OACI,yBAAKC,QAAS,YAAQL,GAAYE,EAAOE,IAASE,WAAW,EAAMV,UAAS,gBAAWI,EAAY,UAAY,KAC3G,wBAAIJ,UAAU,cAAd,SAAkCQ,EAAMG,MACxC,yBAAKX,UAAU,cACX,4BAAQS,QAAS,YAAQL,GAAYE,EAAOE,IAASR,UAAU,QAC3D,uBAAGA,UAAU,kBAAmBI,EAAiC,uBAArB,qBAEhD,4BAAQK,QAAS,kBAAMF,EAASC,IAAQR,UAAU,UAC9C,uBAAGA,UAAU,kBAAb,cCoGLY,EA7GE,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cAAoB,EACxBC,mBAAS,IADe,mBAC7CC,EAD6C,KACrCC,EADqC,OAEZF,mBAAS,MAFG,mBAE7CG,EAF6C,KAE/BC,EAF+B,OAGhBJ,oBAAS,GAHO,mBAG7CK,EAH6C,KAGjCC,EAHiC,KAI9CC,EAAcC,iBAAO,MAErBlB,EAAU,CACZC,OADY,SACLE,GACHW,EAAgBX,IAEpBD,SAJY,SAIHC,GACDU,GAAgBA,EAAaP,OAASH,EAAMG,MAC5CG,EAAc,IAElBG,EAAUD,EAAOQ,QAAO,SAAAC,GAAC,OAAIA,EAAEd,OAASH,EAAMG,SAC9Ce,EAAW,KAIbA,EAAaC,uBAAY,WAAc,IAAbC,EAAY,uDAAN,EAClC,KAAIZ,EAAOa,OAAS,GAApB,CACA,IAAIC,EAAed,EAAOe,WAAU,SAAAN,GAAC,OAAIP,GAAiBO,EAAEd,OAASO,EAAaP,QAClFmB,GAAgBF,EAChB,IAAII,EAAkBC,OACjBH,GAAgBd,EAAOa,QAAUC,GAAgB,EAAK,EACnDA,EAAe,EAAKd,EAAOa,OAAS,EAAKC,GAG5CZ,GAAgBA,EAAaP,OAASK,EAAOgB,GAAiBrB,MAC/DQ,EAAgBH,EAAOgB,OAG5B,CAACd,EAAcF,IAEZkB,EAAkB,SAACC,GAA2B,IAApBC,EAAmB,wDAC/CD,EAAME,iBACN,IAAMC,EAAK,YAAQF,EAASD,EAAMI,aAAaD,MAAQH,EAAMK,OAAOF,OAC9DG,EAAUC,SAASC,cAAc,SACjCC,EAAiBN,EAAMT,OACvBgB,EAAgB,SAAAC,GAAI,OAAI9B,EAAO+B,MAAK,SAAAC,GAAE,OAAIA,EAAGrC,OAASmC,EAAKnC,SAC3DsC,EAAeX,EAAMd,QACvB,SAAAsB,GACI,OAAOL,EAAQS,YAAYJ,EAAKK,QAAUN,EAAcC,MAG5DG,EAAapB,QACbZ,EAAU,GAAD,mBAAKD,GAAL,YAAgBiC,KAEzBL,IAAmBK,EAAapB,QAChCuB,MAAM,GAAD,OAAIR,EAAiBK,EAAapB,OAAlC,cAA8Ce,EAA9C,2DAA+GK,EAAapB,OAA5H,aA+Bb,OAxBAwB,qBAAU,YACDjC,GAAcP,IACfa,IACAL,GAAc,KAEbR,GAAkBO,GACnBC,GAAc,KAEnB,CAACR,EAAgBO,EAAYM,IAEhC2B,qBAAU,WACNnC,GAAgBJ,EAAcwC,OAAOC,IAAIC,gBAAgBtC,IACzDuC,QAAQC,IAAIxC,KACb,CAACA,EAAeJ,IAEnBuC,qBAAU,WAGN,OAFAC,OAAOK,WAAa,SAAAC,GAAC,OAAIA,EAAEvB,kBAC3BiB,OAAOO,OAAS,SAAAD,GAAC,OAAI1B,EAAgB0B,GAAG,IACjC,WACHN,OAAOK,WAAa,KACpBL,OAAOO,OAAS,SAKpB,yBAAK7D,UAAU,YACX,yBAAKA,UAAU,UACX,wCACA,yBAAKA,UAAU,iBACX,4BAAQS,QAAS,SAAAmD,GAAC,OAAItC,EAAYwC,QAAQC,UACtC,uBAAG/D,UAAU,kBAAb,gBACA,2CACA,2BAAOgE,UAAU,EAAMC,OAAO,kBAAkBC,MAAO,CAAEC,QAAS,QAAUC,IAAK9C,EAAa6B,KAAK,OAAOkB,SAAUnC,KAGxH,4BAAQzB,QAAS,kBAAMiB,GAAY,IAAI1B,UAAU,QAC7C,uBAAGA,UAAU,kBAAb,eAEJ,4BAAQS,QAAS,kBAAMiB,KAAc1B,UAAU,QAC3C,uBAAGA,UAAU,kBAAb,oBAIZ,yBAAKA,UAAU,UACVgB,EAAOa,OAAS,EACbb,EAAOsD,KAAI,SAAA9D,GAAK,OAAI,kBAAC,EAAD,CAAOJ,UAAWc,GAAiBA,EAAaP,OAASH,EAAMG,KAAON,QAASA,EAASkE,IAAK/D,EAAMG,KAAMH,MAAOA,OAClI,yECKPgE,EA3GG,WAAO,IAAD,EACMzD,mBAAS,MADf,mBACb0D,EADa,KACNC,EADM,OAEU3D,oBAAS,GAFnB,mBAEb4D,EAFa,KAEJC,EAFI,OAGM7D,oBAAS,GAHf,mBAGb8D,EAHa,KAGNC,EAHM,OAIQ/D,mBAAS,GAJjB,mBAIbgE,EAJa,KAILC,EAJK,OAKkBjE,mBAAS,kBAL3B,mBAKbkE,EALa,KAKAC,EALA,OAMgBnE,mBAAS,MANzB,mBAMboE,EANa,KAMDC,EANC,OAO0BrE,mBAAS,MAPnC,mBAObsE,EAPa,KAOIC,EAPJ,OAQQvE,oBAAS,GARjB,mBAQbwE,EARa,KAQLC,EARK,OASUzE,oBAAS,GATnB,mBASb0E,EATa,KASJC,EATI,KAWdC,EAAehE,uBAAY,WAC7B8C,EAAMmB,iBAAiB,QAAQ,SAAAhC,GAC3BgB,GAAW,GACXW,GAAUC,GAAU,MAGxBf,EAAMmB,iBAAiB,WAAW,SAAAhC,GAAC,OAAK6B,GAAWC,GAAW,MAE9DjB,EAAMmB,iBAAiB,WAAW,SAAAhC,GAC9B2B,GAAUC,GAAU,MAGxBf,EAAMmB,iBAAiB,SAAS,SAAAhC,GAC5BgB,GAAW,MAGfH,EAAMmB,iBAAiB,gBAAgB,SAAAhC,GAC/BuB,IACAA,EAAWjB,MAAM2B,MAASpB,EAAMM,OAASI,EAAWW,YAAe,MAEvEd,EAAUP,EAAMM,QAChBD,EAASL,EAAMI,UAGnBJ,EAAMmB,iBAAiB,cAAc,SAAAhC,GAC7ByB,IACAA,EAAgBnB,MAAM2B,MAA6B,IAApBpB,EAAMQ,YAAoBR,EAAMsB,SAAY,KAE/Eb,EAAec,EAAUvB,EAAMQ,aAAe,MAAQe,EAAUvB,EAAMsB,cAG1EtB,EAAMmB,iBAAiB,SAAS,SAAAhC,GAAC,OAAK2B,GAAUC,GAAU,MAC1Df,EAAMmB,iBAAiB,SAAS,SAAAhC,GAAC,OAAI6B,GAAWC,GAAW,QAC5D,CAACjB,EAAOc,EAAQF,EAAiBI,EAASN,IAE7C9B,qBAAU,WACFoB,IACAO,EAAUP,EAAMM,QAChBD,EAASL,EAAMI,OACfc,OAEL,CAAClB,EAAOkB,IAMX,SAASK,EAAUC,GACf,IACIC,EAAOC,EAAMC,EADXC,EAAW,SAAAC,GAAG,OAAIC,OAAOD,EAAM,GAAK,KAAOA,GAAO,GAAMA,GAAO,IAQrE,OANsB,EAGtBH,GADAD,EAAQM,KAAKC,MAAMR,EAAU,OACdO,KAAKC,MAAmC,IAA3BR,EAAU,KAAQC,IAAeM,KAAKC,MAAMR,EAAU,IAClFG,EAAOF,EAAQM,KAAKC,MAAmD,IAAd,IAA3BR,EAAU,KAAQC,GAAeC,IAAcK,KAAKC,MAAgC,IAAxBR,EAAU,GAAME,IAEpG,GAAN,OAAUD,EAAQG,EAASH,GAAS,IAAM,IAA1C,OAA+CG,EAASF,GAAxD,YAAiEE,EAASD,IAsB9E,MAAO,CACHnB,cACAF,SACAF,QACAU,SACAZ,UACAc,UACAiB,WA1Ce,kBAAMjB,IAAYhB,EAAMkC,OAASlC,EAAMmC,OAASnC,EAAMoC,UA2CrEC,YA1CgB,kBAAMrB,IAAYhB,EAAMI,OAASA,IA2CjDkC,aA1CiB,SAAAhC,GAAM,OAAIU,IAAYhB,EAAMM,OAASA,IA2CtDiC,kBA7BsB,SAAAC,GAAO,OAAIxC,EAAMQ,YAAcgC,GA8BrDC,mBA7BuB,SAACtD,GAAyB,IAAtBuD,EAAqB,wDAChD,GAAK1B,EAAL,CACA,IAAM2B,EACFxD,EAAEpB,OAAO6E,kBAAoBzD,EAAEpB,OAASoB,EAAEpB,OAAO8E,cAE/CC,EAAeH,EAAgBC,kBAC/BG,EAAyB,IAAZ5D,EAAE6D,QAAgBL,EAAgBtB,YAEjDqB,GACAI,EAAarD,MAAM2B,MAAS2B,EAAaD,EAAazB,YAAc,IAAO,KAC3ErB,EAAMM,OAASyC,EAAa,MAE5BD,EAAarD,MAAM2B,MAAQ2B,EAAa,IAExC/C,EAAMQ,YAAeuC,EAAa,IAAO/C,EAAMsB,YAgBnDX,gBACAE,qBACAZ,aCHFgD,EAAsB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,aAA8B,IAAhBC,aAAgB,MAAR,EAAQ,IACpC9G,mBAAS,MAD2B,mBAC3D+G,EAD2D,KAClDC,EADkD,KASlE,OANA1E,qBAAU,WACFyE,GACAA,EAAQlC,iBAAiB,QAASgC,KAEvC,CAACE,EAASF,IAGT,yBAAKxD,IAAK2D,EAAY/H,UAAU,oBAC5B,yBAAKoE,IAAKuD,EAASzD,MAAO,CAAE2B,MAAgB,IAARgC,EAAe,KAAO7H,UAAU,oBAKjEgI,EApHA,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,cAAiD,IAAlCC,gBAAkC,MAAvB,GAAuB,MAAnBC,YAAmB,WACXpH,oBAAS,GADE,mBACxDqH,EADwD,KACpCC,EADoC,OAEjBtH,oBAAS,GAFQ,mBAExDuH,EAFwD,KAEvCC,EAFuC,OAGvBxH,oBAAS,GAHc,mBAGxDyH,EAHwD,KAG1CC,EAH0C,KAIzDC,EAAanH,iBAAO,MACpBoH,EAAYpH,iBAAO,MALsC,EAW3DiD,IAJIS,EAPuD,EAOvDA,YAAaM,EAP0C,EAO1CA,OAAQV,EAPkC,EAOlCA,MAAOE,EAP2B,EAO3BA,OAAQJ,EAPmB,EAOnBA,QAASD,EAPU,EAOVA,SAAUgC,EAPA,EAOAA,WAAYI,EAPZ,EAOYA,YACvEI,EAR2D,EAQ3DA,mBACA9B,EAT2D,EAS3DA,cACAE,EAV2D,EAU3DA,mBAGEsD,EAAkBjH,uBAAY,WAChC,IAAMkH,EAAoBH,EAAW5E,QACrC+E,GAAqBC,aAAaD,IAC7BT,GAAsBE,IACvBI,EAAW5E,QAAUiF,YAAW,WAC5BV,GAAsB,KACvB,MAEPD,GAAsBC,GAAsB,KAC7C,CAACD,EAAoBE,IAkBxB,OAhBAjF,qBAAU,WACN,IAAM2F,EAAStG,SAASuG,kBAClBC,EAAWP,EAAU7E,QAEvB0E,GACCQ,GAAUE,GAAYA,EAASC,oBAEhCH,GAAUtG,SAAS0G,mBAExB,CAACZ,IAEJnF,qBAAU,WACN4E,EAAc1C,KACf,CAACA,EAAQ0C,IAIR,yBACI7D,IAAKuE,EACLU,WAAY,SAAAzF,IACPwE,GAAsBC,GAAsB,IAEjDiB,YAAaV,EACb5I,UAAS,UAET,2BACIoE,IAAKM,EAAU6E,UAAQ,EAACpB,KAAMA,EAAMqB,IAAKtB,EAAUuB,OAAO,gBAE1D,yBACIhJ,QAASiG,EACT1G,UAAS,wBAAmB2E,EAAU,SAAW,KACjD,4BAAQ3E,UAAU,QACd,uBAAGA,UAAU,kBAAb,UACQ2E,EAAU,QAAU,OAD5B,sBAMZ,yBACI+E,YAAa,SAAA9F,GACT0E,GAAmBC,GAAmB,IAE1Cc,WAAY,SAAAzF,IACP0E,GAAmBC,GAAmB,IAE3CvI,UAAS,mBAAcoI,GAAsB,WAC7C,yBAAKpI,UAAU,QACX,yBAAKA,UAAU,QACX,4BAAQS,QAASiG,EAAY1G,UAAU,QACnC,uBAAGA,UAAU,kBAAb,UACQ2E,EAAU,QAAU,OAD5B,sBAKR,yBAAK3E,UAAU,UAAS,4BAAKiF,IAC7B,yBAAKjF,UAAU,SACX,4BACIS,QAAS,SAAAmD,GAAC,OAAI6E,GAAgB,SAAAkB,GAAI,OAAKA,MACvC3J,UAAU,QAEV,uBAAGA,UAAU,kBAAb,eAEJ,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,QACd,kBAAC,EAAD,CAAqB2H,QAASvC,EAAewC,aAAc,SAAAhE,GAAC,OAAIsD,EAAmBtD,GAAG,IAAOiE,MAAO9C,IACpG,uBAAGtE,QAASqG,EAAa9G,UAAU,kBAAkB6E,EAAQ,aAAe,iBAK5F,kBAAC,EAAD,CAAqB8C,QAASrC,EAAoBsC,aAAcV,OCnFjE0C,EAVD,WAAO,IAAD,EACoB7I,mBAAS,IAD7B,mBACT8I,EADS,KACG/I,EADH,OAEoBC,oBAAS,GAF7B,mBAET+I,EAFS,KAEG7B,EAFH,KAIhB,OAAO,oCACH,kBAAC,EAAD,CAAQA,cAAeA,EAAeC,SAAU2B,IAChD,kBAAC,EAAD,CAAUhJ,eAAgBiJ,EAAYhJ,cAAeA,MCE9CiJ,EATF,WAET,OACI,8BACI,kBAAC,EAAD,QCQGC,MAVf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzH,SAAS0H,eAAe,U","file":"static/js/main.d07db0a2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav>\r\n            <div className=\"logo\">\r\n                <span>VAL</span>\r\n                <i className=\"material-icons\">music_note</i>\r\n            </div>\r\n            <ul>\r\n                <li><a className=\"icon\" href=\"#!\"><i className=\"material-icons\">library_music</i></a></li>\r\n                <li><a className=\"icon\" href=\"#!\"><i className=\"material-icons\">playlist_play</i></a></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            &copy;Valentin\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nconst Track = ({ isPlaying, actions: { onPlay, onDelete }, track }) => {\r\n\r\n    return (\r\n        <div onClick={() =>{ !isPlaying &&onPlay(track)}} draggable={true} className={`track ${isPlaying ? \"playing\" : \"\"}`} >\r\n            <h6 className=\"track-name\">Track {track.name}</h6>\r\n            <div className=\"track-btns\">\r\n                <button onClick={() =>{ !isPlaying &&onPlay(track)}} className=\"play\">\r\n                    <i className=\"material-icons\">{!isPlaying ? \"play_circle_fill\" : \"pause_circle_outline\"}</i>\r\n                </button>\r\n                <button onClick={() => onDelete(track)} className=\"delete\">\r\n                    <i className=\"material-icons\">delete</i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Track\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport Track from \"./Track\"\r\n\r\nconst PlayList = ({ shouldPlayNext, setCurrentSrc }) => {\r\n    const [tracks, setTracks] = useState([])\r\n    const [playingTrack, setPlayingTrack] = useState(null)\r\n    const [nextPlayed, setNextPlayed] = useState(false)\r\n    const addTrackRef = useRef(null)\r\n\r\n    const actions = {\r\n        onPlay(track) {\r\n            setPlayingTrack(track)\r\n        },\r\n        onDelete(track) {\r\n            if (playingTrack && playingTrack.name === track.name) {\r\n                setCurrentSrc(\"\")\r\n            }\r\n            setTracks(tracks.filter(t => t.name !== track.name))\r\n            handlePlay(1)\r\n        }\r\n    }\r\n\r\n    const handlePlay = useCallback((dir = 1) => {\r\n        if (tracks.length < 1) return\r\n        let playingIndex = tracks.findIndex(t => playingTrack && (t.name === playingTrack.name))\r\n        playingIndex += dir\r\n        let newPlayingIndex = Number(\r\n            (playingIndex >= tracks.length || playingIndex < -1) ? 0 : (\r\n                playingIndex < 0 ? (tracks.length - 1) : playingIndex\r\n            )\r\n        )\r\n        if (!playingTrack || playingTrack.name !== tracks[newPlayingIndex].name) {\r\n            setPlayingTrack(tracks[newPlayingIndex])\r\n        }\r\n\r\n    }, [playingTrack, tracks])\r\n\r\n    const handleAddTracks = (event, isDrop = false) => {\r\n        event.preventDefault()\r\n        const files = [...(isDrop ? event.dataTransfer.files : event.target.files)]\r\n        const tempVid = document.createElement(\"video\")\r\n        const uploadedLength = files.length\r\n        const alreadyExists = file => tracks.some(tk => tk.name === file.name)\r\n        const filtredFiles = files.filter(\r\n            file => {\r\n                return tempVid.canPlayType(file.type) && !alreadyExists(file)\r\n            }\r\n        )\r\n        if (filtredFiles.length) {\r\n            setTracks([...tracks, ...filtredFiles])\r\n        }\r\n        if (uploadedLength !== filtredFiles.length) {\r\n            alert(`${uploadedLength - filtredFiles.length} / ${uploadedLength} file(s) type not supported or already exists | ${filtredFiles.length} Added.`)\r\n        }\r\n    }\r\n\r\n\r\n    // side effects\r\n\r\n    useEffect(() => {\r\n        if (!nextPlayed && shouldPlayNext) {\r\n            handlePlay()\r\n            setNextPlayed(true)\r\n        }\r\n        if (!shouldPlayNext && nextPlayed) {\r\n            setNextPlayed(false)\r\n        }\r\n    }, [shouldPlayNext, nextPlayed, handlePlay])\r\n\r\n    useEffect(() => {\r\n        playingTrack && setCurrentSrc(window.URL.createObjectURL(playingTrack))\r\n        console.log(playingTrack)\r\n    }, [playingTrack,  setCurrentSrc])\r\n\r\n    useEffect(() => {\r\n        window.ondragover = e => e.preventDefault()\r\n        window.ondrop = e => handleAddTracks(e, true)\r\n        return () => {\r\n            window.ondragover = null\r\n            window.ondrop = null\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"playlist\">\r\n            <div className=\"header\">\r\n                <h1>Playlist</h1>\r\n                <div className=\"playlist-btns\">\r\n                    <button onClick={e => addTrackRef.current.click()}>\r\n                        <i className=\"material-icons\">playlist_add</i>\r\n                        <span>Add track</span>\r\n                        <input multiple={true} accept=\"audio/*,video/*\" style={{ display: \"none\" }} ref={addTrackRef} type=\"file\" onChange={handleAddTracks} />\r\n\r\n                    </button>\r\n                    <button onClick={() => handlePlay(-1)} className=\"icon\">\r\n                        <i className=\"material-icons\">arrow_back</i>\r\n                    </button>\r\n                    <button onClick={() => handlePlay()} className=\"icon\">\r\n                        <i className=\"material-icons\">arrow_forward</i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"tracks\">\r\n                {tracks.length > 0 ?\r\n                    tracks.map(track => <Track isPlaying={playingTrack && (playingTrack.name === track.name)} actions={actions} key={track.name} track={track} />)\r\n                    : <h1>No tracks yet. You can drag-drop here.</h1>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayList\r\n","import { useState, useEffect, useCallback } from 'react'\r\n\r\n\r\nconst usePlayer = () => {\r\n    const [video, setVideo] = useState(null)\r\n    const [playing, setPlaying] = useState(false)\r\n    const [muted, setMuted] = useState(false)\r\n    const [volume, setVolume] = useState(1)\r\n    const [currentTime, setCurrentTime] = useState(\"00:000 / 00:00\")\r\n    const [volumeLine, setVolumeLine] = useState(null)\r\n    const [currentTimeLine, setCurrentTimeLine] = useState(null)\r\n    const [didEnd, setDidEnd] = useState(false)\r\n    const [canPlay, setCanPlay] = useState(false)\r\n\r\n    const addListeners = useCallback(() => {\r\n        video.addEventListener(\"play\", e => {\r\n            setPlaying(true)\r\n            didEnd && setDidEnd(false)\r\n        })\r\n\r\n        video.addEventListener(\"canplay\", e => !canPlay && setCanPlay(true))\r\n\r\n        video.addEventListener(\"playing\", e => {\r\n            didEnd && setDidEnd(false)\r\n        })\r\n\r\n        video.addEventListener(\"pause\", e => {\r\n            setPlaying(false)\r\n        })\r\n\r\n        video.addEventListener(\"volumechange\", e => {\r\n            if (volumeLine) {\r\n                volumeLine.style.width = (video.volume * volumeLine.offsetWidth) + \"px\"\r\n            }\r\n            setVolume(video.volume)\r\n            setMuted(video.muted)\r\n        })\r\n\r\n        video.addEventListener(\"timeupdate\", e => {\r\n            if (currentTimeLine) {\r\n                currentTimeLine.style.width = (video.currentTime * 100 / video.duration) + \"%\"\r\n            }\r\n            setCurrentTime(chunkTime(video.currentTime) + \" / \" + chunkTime(video.duration))\r\n        })\r\n\r\n        video.addEventListener(\"ended\", e => !didEnd && setDidEnd(true))\r\n        video.addEventListener(\"error\", e => canPlay && setCanPlay(false))\r\n    }, [video, didEnd, currentTimeLine, canPlay, volumeLine])\r\n\r\n    useEffect(() => {\r\n        if (video) {\r\n            setVolume(video.volume)\r\n            setMuted(video.muted)\r\n            addListeners()\r\n        }\r\n    }, [video, addListeners])\r\n\r\n    const togglePlay = () => canPlay && (video.paused ? video.play() : video.pause())\r\n    const toggleMuted = () => canPlay && (video.muted = !muted)\r\n    const changeVolume = volume => canPlay && (video.volume = volume)\r\n\r\n    function chunkTime(seconds) {\r\n        const prepend0 = val => String(val < 10 ? '0' + (val || 0) : (val || 0))\r\n        let hours, mins, secs\r\n        hours = mins = secs = 0\r\n\r\n        hours = Math.floor(seconds / 3600)\r\n        mins = hours ? Math.floor(((seconds / 3600) - hours) * 60) : Math.floor(seconds / 60)\r\n        secs = hours ? Math.floor(((((seconds / 3600) - hours) * 60) - mins) * 60) : Math.floor(((seconds / 60) - mins) * 60)\r\n\r\n        return `${hours ? prepend0(hours) + ':' : ''}${prepend0(mins)}:${prepend0(secs)}`\r\n    }\r\n\r\n    const changeCurrentTime = newTime => video.currentTime = newTime\r\n    const calculateFromEvent = (e, isVolume = false) => {\r\n        if (!canPlay) return\r\n        const progressWrapper = (\r\n            e.target.firstElementChild ? e.target : e.target.parentElement\r\n        )\r\n        const progressLine = progressWrapper.firstElementChild\r\n        const percentage = e.offsetX * 100 / progressWrapper.offsetWidth\r\n\r\n        if (isVolume) {\r\n            progressLine.style.width = (percentage * progressLine.offsetWidth / 100) + \"px\"\r\n            video.volume = percentage / 100\r\n        } else {\r\n            progressLine.style.width = percentage + \"%\"\r\n\r\n            video.currentTime = (percentage / 100) * video.duration\r\n        }\r\n    }\r\n\r\n    return {\r\n        currentTime,\r\n        volume,\r\n        muted,\r\n        didEnd,\r\n        playing,\r\n        canPlay,\r\n        togglePlay,\r\n        toggleMuted,\r\n        changeVolume,\r\n        changeCurrentTime,\r\n        calculateFromEvent,\r\n        setVolumeLine,\r\n        setCurrentTimeLine,\r\n        setVideo\r\n    }\r\n}\r\n\r\nexport default usePlayer\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport usePlayer from \"../hooks/usePlayer\"\r\n\r\nconst Player = ({ setMediaEnded, mediaSrc = '', loop = false }) => {\r\n    const [shouldHideControls, setShouldHideControls] = useState(false)\r\n    const [canHideControls, setCanHideControls] = useState(true)\r\n    const [shouldGoFull, setShouldGoFull] = useState(false)\r\n    const timeoutRef = useRef(null)\r\n    const playerRef = useRef(null)\r\n\r\n    const { currentTime, didEnd, muted, volume, playing, setVideo, togglePlay, toggleMuted,\r\n        calculateFromEvent,\r\n        setVolumeLine,\r\n        setCurrentTimeLine\r\n    } = usePlayer()\r\n\r\n    const handleMouseMove = useCallback(() => {\r\n        const currentTimeoutRef = timeoutRef.current\r\n        currentTimeoutRef && clearTimeout(currentTimeoutRef)\r\n        if (!shouldHideControls && canHideControls) {\r\n            timeoutRef.current = setTimeout(() => {\r\n                setShouldHideControls(true)\r\n            }, 3000)\r\n        }\r\n        shouldHideControls && setShouldHideControls(false)\r\n    }, [shouldHideControls, canHideControls])\r\n\r\n    useEffect(() => {\r\n        const isFull = document.fullscreenElement\r\n        const playerEl = playerRef.current\r\n        // console.log({playerRef, playerEl})\r\n        if (shouldGoFull) {\r\n            !isFull && playerEl && playerEl.requestFullscreen()\r\n        } else {\r\n            isFull && document.exitFullscreen()\r\n        }\r\n    }, [shouldGoFull])\r\n\r\n    useEffect(() => {\r\n        setMediaEnded(didEnd)\r\n    }, [didEnd, setMediaEnded])\r\n\r\n\r\n    return (\r\n        <div\r\n            ref={playerRef}\r\n            onMouseOut={e => {\r\n                !shouldHideControls && setShouldHideControls(true)\r\n            }}\r\n            onMouseMove={handleMouseMove}\r\n            className={`player`}\r\n        >\r\n            <video\r\n                ref={setVideo} autoPlay loop={loop} src={mediaSrc} poster=\"poster.jpeg\"></video>\r\n            {\r\n                <div\r\n                    onClick={togglePlay}\r\n                    className={`video-overlay ${playing ? \"hidden\" : \"\"}`}>\r\n                    <button className=\"icon\">\r\n                        <i className=\"material-icons\">\r\n                            {`${playing ? \"pause\" : \"play\"}_circle_outline`}\r\n                        </i>\r\n                    </button>\r\n                </div>\r\n            }\r\n            <div\r\n                onMouseOver={e => {\r\n                    canHideControls && setCanHideControls(false)\r\n                }}\r\n                onMouseOut={e => {\r\n                    !canHideControls && setCanHideControls(true)\r\n                }}\r\n                className={`controls ${shouldHideControls && \"hidden\"}`}>\r\n                <div className=\"btns\">\r\n                    <div className=\"left\">\r\n                        <button onClick={togglePlay} className=\"icon\">\r\n                            <i className=\"material-icons\">\r\n                                {`${playing ? \"pause\" : \"play\"}_circle_outline`}\r\n                            </i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"middle\"><h6>{currentTime}</h6></div>\r\n                    <div className=\"right\">\r\n                        <button\r\n                            onClick={e => setShouldGoFull(prev => !prev)}\r\n                            className=\"icon\"\r\n                        >\r\n                            <i className=\"material-icons\">fullscreen</i>\r\n                        </button>\r\n                        <div className=\"volume-wrapper\">\r\n                            <button className=\"icon\">\r\n                                <ProgressLineWrapper setLine={setVolumeLine} eventHandler={e => calculateFromEvent(e, true)} level={volume} />\r\n                                <i onClick={toggleMuted} className=\"material-icons\">{muted ? \"volume_off\" : \"volume_up\"}</i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ProgressLineWrapper setLine={setCurrentTimeLine} eventHandler={calculateFromEvent} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProgressLineWrapper = ({ setLine, eventHandler, level = 0 }) => {\r\n    const [wrapper, setWrapper] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (wrapper) {\r\n            wrapper.addEventListener(\"click\", eventHandler)\r\n        }\r\n    }, [wrapper, eventHandler])\r\n\r\n    return (\r\n        <div ref={setWrapper} className=\"progress-wrapper\">\r\n            <div ref={setLine} style={{ width: (level * 100) + \"%\" }} className=\"progress-line\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React, { useState } from 'react'\r\nimport PlayList from \"./PlayList\"\r\nimport Player from \"./Player\"\r\n\r\nconst Music = () => {\r\n    const [currentSrc, setCurrentSrc] = useState(\"\")\r\n    const [mediaEnded, setMediaEnded] = useState(false)\r\n\r\n    return <>\r\n        <Player setMediaEnded={setMediaEnded} mediaSrc={currentSrc} />\r\n        <PlayList shouldPlayNext={mediaEnded} setCurrentSrc={setCurrentSrc} />\r\n    </>\r\n}\r\n\r\nexport default Music","import React from 'react'\r\nimport Music from \"./Music\"\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <main>\r\n            <Music />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}